#N canvas 0 31 1440 789 10;
#X obj 1073 41 loadbang;
#X text 1099 64 v-- re-read the original sample;
#X obj 1073 109 soundfiler;
#X obj 1110 447 dac~;
#X obj 544 73 route list;
#X obj 543 42 receive fromNetwork;
#X obj 561 264 vsl 30 256 0 100 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 880 266 vsl 30 256 0 200 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 610 265 hsl 256 30 0 100 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 562 239 r y;
#X obj 607 237 r x;
#X obj 882 239 r z;
#X text 541 19 values received from the ESP32;
#X text 1119 529 Enrique Tomas flying-interfaces Workshop https://github.com/ultranoise/flying-interfaces/blob/master/README.md
;
#N canvas 0 50 450 250 (subpatch) 0;
#X array table18 174215 float 2;
#X coords 0 1 174215 -1 200 140 1;
#X restore 1352 19 graph;
#X obj 1110 356 hip~ 5;
#X text 1169 358 high pass filter to cut DC;
#X obj 1110 289 line~;
#X obj 1110 240 * 441;
#X floatatom 1110 186 0 0 100 0 - - -;
#X obj 1110 264 pack 0 100;
#X text 1145 187 <-- read point in 100ths of a second;
#X text 1167 240 convert to SAMPLES (441 samples in 0.01 sec);
#X text 1157 289 convert smoothly to audio signal;
#X text 1157 201 (range is 0-100.) YOU ONLY HEAR OUTPUT;
#X text 1158 217 WHEN THIS IS 0-100 AND ACTIVELY CHANGING.;
#X obj 1109 414 *~;
#X obj 1138 388 r vol_master;
#X obj 1110 324 tabread4~ table18;
#X obj 1076 183 r y;
#X msg 1073 84 read -resize loop1_mono.wav table18;
#X obj 46 33 receive fromGUI;
#X obj 47 64 list trim;
#X obj 51 164 r volume;
#X obj 44 116 s volume;
#X obj 50 203 sel 1 0;
#X msg 79 234 0;
#X msg 45 234 0.9;
#X text 36 8 Messages received from the phone;
#X obj 45 280 s vol_master;
#X obj 175 544 send toGUI, f 33;
#X obj 95 344 r x;
#X obj 128 343 r y;
#X obj 169 343 r z;
#N canvas 0 94 614 457 speedControl 0;
#X obj 43 239 inlet;
#X obj 28 270 f;
#X obj 28 293 outlet;
#X obj 27 127 loadbang;
#X obj 115 241 inlet;
#X obj 100 272 f;
#X obj 100 295 outlet;
#X obj 196 243 inlet;
#X obj 181 274 f;
#X obj 181 297 outlet;
#X obj 27 160 metro 100;
#X text 173 22 Updating your phone display can take a bit of time.
As we expect values from the ESP32 every 3 or 4 ms \, we impose here
a slower rate for the values sent to the display. Audio synthesis is
not affected by this subpatch. It runs at full ESP32 rate.;
#X text 134 206 add one of this for each inout you want to control
;
#X obj 247 243 inlet;
#X obj 232 274 f;
#X obj 232 297 outlet;
#X obj 319 245 inlet;
#X obj 304 276 f;
#X obj 304 299 outlet;
#X obj 400 247 inlet;
#X obj 385 278 f;
#X obj 385 301 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 3 0 10 0;
#X connect 4 0 5 1;
#X connect 5 0 6 0;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 10 0 1 0;
#X connect 10 0 5 0;
#X connect 10 0 8 0;
#X connect 10 0 14 0;
#X connect 10 0 17 0;
#X connect 10 0 20 0;
#X connect 13 0 14 1;
#X connect 14 0 15 0;
#X connect 16 0 17 1;
#X connect 17 0 18 0;
#X connect 19 0 20 1;
#X connect 20 0 21 0;
#X restore 137 454 pd speedControl;
#X text 246 444 control the sending rate;
#X msg 146 506 list /z \$1;
#X msg 26 512 list /xy \$1 \$2;
#X obj 25 485 pack f f;
#X text 42 318 Sending values to the phone app;
#X obj 46 92 route /on /presets;
#X obj 126 121 unpack f f f;
#X obj 243 154 s p_value;
#X obj 125 154 s p_column;
#X obj 192 154 s p_row;
#X text 187 71 For example \, /on controls the main volume;
#X text 192 90 we also receive the infomation of presets;
#X obj 540 166 s angles;
#X obj 613 168 s accelero;
#X obj 549 119 route /angles /accelero /analog;
#X obj 695 167 s analog;
#X obj 673 310 r angles;
#X obj 671 349 unpack f f f;
#X floatatom 665 384 5 0 0 0 - - -;
#X floatatom 709 384 5 0 0 0 - - -;
#X floatatom 756 382 5 0 0 0 - - -;
#X obj 665 413 s x;
#X obj 710 411 s y;
#X obj 758 414 s z;
#X obj 663 478 unpack f f f;
#X floatatom 657 513 5 0 0 0 - - -;
#X floatatom 701 513 5 0 0 0 - - -;
#X floatatom 748 511 5 0 0 0 - - -;
#X obj 665 454 r accelero;
#X obj 656 542 s ax;
#X obj 702 540 s ay;
#X obj 750 543 s az;
#X floatatom 662 654 5 0 0 0 - - -;
#X floatatom 706 654 5 0 0 0 - - -;
#X floatatom 753 652 5 0 0 0 - - -;
#X obj 670 595 r analog;
#X obj 668 619 unpack f f f f;
#X floatatom 797 651 5 0 0 0 - - -;
#X obj 97 371 abs;
#X obj 102 407 / 180;
#X obj 141 408 / 180;
#X obj 183 407 / 180;
#X obj 137 373 abs;
#X obj 182 376 abs;
#X connect 0 0 30 0;
#X connect 4 0 59 0;
#X connect 5 0 4 0;
#X connect 9 0 6 0;
#X connect 10 0 8 0;
#X connect 11 0 7 0;
#X connect 15 0 26 0;
#X connect 17 0 28 0;
#X connect 18 0 20 0;
#X connect 19 0 18 0;
#X connect 20 0 17 0;
#X connect 26 0 3 0;
#X connect 26 0 3 1;
#X connect 27 0 26 1;
#X connect 28 0 15 0;
#X connect 29 0 18 0;
#X connect 30 0 2 0;
#X connect 31 0 32 0;
#X connect 32 0 50 0;
#X connect 33 0 35 0;
#X connect 35 0 37 0;
#X connect 35 1 36 0;
#X connect 36 0 39 0;
#X connect 37 0 39 0;
#X connect 41 0 83 0;
#X connect 42 0 87 0;
#X connect 43 0 88 0;
#X connect 44 0 48 0;
#X connect 44 1 48 1;
#X connect 44 2 46 0;
#X connect 46 0 40 0;
#X connect 47 0 40 0;
#X connect 48 0 47 0;
#X connect 50 0 34 0;
#X connect 50 1 51 0;
#X connect 51 0 53 0;
#X connect 51 1 54 0;
#X connect 51 2 52 0;
#X connect 59 0 57 0;
#X connect 59 1 58 0;
#X connect 59 2 60 0;
#X connect 61 0 62 0;
#X connect 62 0 63 0;
#X connect 62 1 64 0;
#X connect 62 2 65 0;
#X connect 63 0 66 0;
#X connect 64 0 67 0;
#X connect 65 0 68 0;
#X connect 69 0 70 0;
#X connect 69 1 71 0;
#X connect 69 2 72 0;
#X connect 70 0 74 0;
#X connect 71 0 75 0;
#X connect 72 0 76 0;
#X connect 73 0 69 0;
#X connect 80 0 81 0;
#X connect 81 0 77 0;
#X connect 81 1 78 0;
#X connect 81 2 79 0;
#X connect 81 3 82 0;
#X connect 83 0 84 0;
#X connect 84 0 44 0;
#X connect 85 0 44 1;
#X connect 86 0 44 2;
#X connect 87 0 85 0;
#X connect 88 0 86 0;
