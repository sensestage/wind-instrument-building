#N canvas 32 25 1440 796 10;
#X obj 921 229 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 971 209 line~;
#X obj 971 241 osc~;
#X obj 971 285 delwrite~ buff1 10000;
#X obj 1128 363 sig~;
#X floatatom 1128 339 5 0 0 0 - - -;
#X obj 1129 393 vd~ buff1;
#X floatatom 1149 423 5 0 0 0 - - -;
#X obj 1270 362 sig~;
#X floatatom 1270 338 5 0 0 0 - - -;
#X obj 1271 392 vd~ buff1;
#X floatatom 1291 422 5 0 0 0 - - -;
#X obj 1411 363 sig~;
#X floatatom 1411 339 5 0 0 0 - - -;
#X obj 1412 393 vd~ buff1;
#X floatatom 1432 423 5 0 0 0 - - -;
#X obj 1553 362 sig~;
#X floatatom 1553 338 5 0 0 0 - - -;
#X obj 1554 392 vd~ buff1;
#X floatatom 1574 422 5 0 0 0 - - -;
#X obj 1187 603 hip~ 5;
#X obj 1188 636 dac~;
#X text 1023 241 instead of microphone input;
#X text 1126 318 loop duration;
#X text 1267 315 loop duration;
#X text 1409 315 loop duration;
#X text 1553 314 loop duration;
#X obj 969 91 r x;
#X obj 968 121 * 20;
#X msg 971 179 \$1 200;
#X obj 970 150 + 100;
#X msg 1272 239 121;
#X msg 1306 240 245;
#X msg 1343 240 456;
#X msg 1377 241 786;
#X obj 1188 575 *~ 0.5;
#X obj 1278 195 loadbang;
#X obj 1411 445 *~ 0.2;
#X obj 1553 444 *~ 0.1;
#X obj 1270 444 *~ 0.2;
#X obj 1128 445 *~ 0.2;
#X obj 544 73 route list;
#X obj 543 42 receive fromNetwork;
#X obj 561 264 vsl 30 256 0 100 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 880 266 vsl 30 256 0 200 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 610 265 hsl 256 30 0 100 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 562 239 r y;
#X obj 607 237 r x;
#X obj 882 239 r z;
#X text 541 19 values received from the ESP32;
#X text 187 815 Enrique Tomas flying-interfaces Workshop https://github.com/ultranoise/flying-interfaces/blob/master/README.md
;
#X obj 1247 573 r vol_master;
#X text 1062 67 An experiment in delay buffers controlled by one parameter
;
#X msg 415 35 \; pd dsp 1;
#X text 440 73 ON;
#X obj 414 6 loadbang;
#X obj 49 81 receive fromGUI;
#X obj 50 112 list trim;
#X obj 81 238 r volume;
#X obj 47 164 s volume;
#X obj 80 260 sel 1 0;
#X msg 109 291 0;
#X msg 75 291 0.9;
#X text 39 56 Messages received from the phone;
#X obj 74 320 s vol_master;
#X obj 190 738 send toGUI, f 33;
#X obj 13 359 r x;
#X obj 48 356 r y;
#X obj 87 359 r z;
#N canvas 0 94 614 457 speedControl 0;
#X obj 43 239 inlet;
#X obj 28 270 f;
#X obj 28 293 outlet;
#X obj 27 127 loadbang;
#X obj 115 241 inlet;
#X obj 100 272 f;
#X obj 100 295 outlet;
#X obj 196 243 inlet;
#X obj 181 274 f;
#X obj 181 297 outlet;
#X obj 27 160 metro 100;
#X text 173 22 Updating your phone display can take a bit of time.
As we expect values from the ESP32 every 3 or 4 ms \, we impose here
a slower rate for the values sent to the display. Audio synthesis is
not affected by this subpatch. It runs at full ESP32 rate.;
#X text 211 191 add one of this for each inout you want to control
;
#X obj 247 243 inlet;
#X obj 232 274 f;
#X obj 232 297 outlet;
#X obj 319 245 inlet;
#X obj 304 276 f;
#X obj 304 299 outlet;
#X obj 400 247 inlet;
#X obj 385 278 f;
#X obj 385 301 outlet;
#X obj 478 248 inlet;
#X obj 463 279 f;
#X obj 463 302 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 3 0 10 0;
#X connect 4 0 5 1;
#X connect 5 0 6 0;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 10 0 1 0;
#X connect 10 0 5 0;
#X connect 10 0 8 0;
#X connect 10 0 14 0;
#X connect 10 0 17 0;
#X connect 10 0 20 0;
#X connect 10 0 23 0;
#X connect 13 0 14 1;
#X connect 14 0 15 0;
#X connect 16 0 17 1;
#X connect 17 0 18 0;
#X connect 19 0 20 1;
#X connect 20 0 21 0;
#X connect 22 0 23 1;
#X connect 23 0 24 0;
#X restore 152 560 pd speedControl;
#X text 290 556 control the sending rate;
#X msg 130 651 list /z \$1;
#X msg 48 680 list /xy \$1 \$2;
#X obj 47 653 pack f f;
#X text 301 315 Sending values to the phone app;
#X obj 129 169 unpack f f f;
#X obj 246 202 s p_value;
#X obj 128 202 s p_column;
#X obj 195 202 s p_row;
#X text 188 99 For example \, /on controls the main volume;
#X text 187 116 we also receive the infomation of presets;
#X obj 535 155 s angles;
#X obj 673 310 r angles;
#X obj 671 349 unpack f f f;
#X floatatom 665 384 5 0 0 0 - - -;
#X floatatom 709 384 5 0 0 0 - - -;
#X floatatom 756 382 5 0 0 0 - - -;
#X obj 665 413 s x;
#X obj 710 411 s y;
#X obj 758 414 s z;
#X obj 5 386 abs;
#X obj 10 422 / 180;
#X obj 49 423 / 180;
#X obj 91 422 / 180;
#X obj 45 388 abs;
#X obj 90 391 abs;
#X obj 608 157 s accelero;
#X obj 49 140 route /on /presets /ac;
#X obj 242 157 s ac;
#X obj 178 256 sel 1 0;
#X obj 179 234 r ac;
#X obj 172 316 s xy_selector;
#X msg 173 287 2;
#X obj 663 478 unpack f f f;
#X floatatom 657 513 5 0 0 0 - - -;
#X floatatom 701 513 5 0 0 0 - - -;
#X floatatom 748 511 5 0 0 0 - - -;
#X obj 665 454 r accelero;
#X obj 656 542 s ax;
#X obj 702 540 s ay;
#X obj 750 543 s az;
#X obj 56 512 spigot;
#X obj 111 514 spigot;
#X obj 158 515 spigot;
#X obj 137 360 r ax;
#X obj 183 359 r ay;
#X obj 231 362 r az;
#X obj 341 355 r xy_selector;
#X obj 340 388 sel 2;
#X obj 302 479 spigot;
#X obj 357 481 spigot;
#X obj 404 482 spigot;
#X msg 336 418 1;
#X msg 370 419 0;
#X msg 210 287 1;
#X obj 395 389 sel 1;
#X msg 414 416 1;
#X msg 446 415 0;
#X obj 248 263 loadbang;
#X obj 648 81 print;
#X obj 147 391 abs;
#X obj 187 393 abs;
#X obj 232 396 abs;
#X obj 150 417 * 0.5;
#X obj 189 416 * 0.5;
#X obj 229 418 * 0.5;
#X obj 544 108 route /angles /accelero /analog;
#X obj 690 156 s analog;
#X floatatom 679 705 5 0 0 0 - - -;
#X floatatom 723 705 5 0 0 0 - - -;
#X floatatom 770 703 5 0 0 0 - - -;
#X obj 687 646 r analog;
#X obj 685 670 unpack f f f f;
#X floatatom 814 702 5 0 0 0 - - -;
#X obj 687 810 s a1;
#X obj 732 811 s a2;
#X obj 782 808 s a3;
#X obj 835 811 s a4;
#X msg 222 619 list /an1 \$1;
#X msg 243 645 list /an2 \$1;
#X msg 269 666 list /an3 \$1;
#X msg 284 691 list /an4 \$1;
#X obj 348 516 r a1;
#X obj 394 514 r a2;
#X obj 442 517 r a3;
#X obj 486 520 r a4;
#X text 1174 98 edit and modify this patch!;
#X text 277 157 selector acceleration/angle;
#X obj 1035 865 mtof;
#X obj 1035 814 stripnote;
#X obj 1186 870 select;
#X obj 1177 764 float;
#X obj 1186 732 t b f;
#X obj 1186 838 float;
#X text 1236 723 f - store pitch below;
#X text 1226 766 velocity stored here;
#X text 1150 810 off;
#X text 1230 838 recall pitch;
#X obj 1056 699 unpack;
#X obj 1116 926 line~;
#X msg 1116 895 \$1 100;
#X text 1237 740 b - bang to recall velocity;
#X obj 1177 793 sel 0;
#X text 1199 814 on;
#X obj 1025 1070 hip~ 5;
#X obj 1025 1009 *~;
#X obj 1035 892 phasor~;
#X obj 1035 916 -~ 0.5;
#X obj 1025 957 cos~;
#X obj 1098 982 *~;
#X obj 1025 981 +~ 1;
#X obj 1098 1030 cos~;
#X text 1040 842 pitch;
#X text 1229 794 test for note on or off;
#X text 1239 871 test against latest;
#X text 1281 886 note-on pitch;
#X obj 1025 1042 *~;
#X obj 1116 868 / 127;
#X obj 1098 1006 *~ 2;
#X obj 1116 955 +~ 0.5;
#X text 1144 1026 The +~ 0.5 and *~ 2 are fudge factors.;
#X text 1144 987 This replaces the tabread4~;
#X text 1142 1007 in the previous patch.;
#X text 975 789 filter note-on messages, f 8;
#X text 1166 919 envelope generator now controls amplitude as well
as grain size, f 31;
#X obj 840 1040 hip~ 5;
#X obj 841 1073 dac~;
#X obj 841 1012 *~ 0.5;
#X obj 900 1010 r vol_master;
#X obj 681 841 > 0.7;
#X obj 726 841 > 0.7;
#X obj 778 840 > 0.7;
#X obj 823 840 > 0.7;
#X text 596 868 a threshold;
#X obj 681 888 sel 1;
#X obj 727 887 sel 1;
#X obj 777 886 sel 1;
#X obj 824 886 sel 1;
#X msg 614 964 48 90;
#X obj 644 940 del 100;
#X msg 661 963 48 0;
#X obj 726 1007 s note;
#X msg 1186 896 0 100;
#X obj 733 938 del 100;
#X msg 706 962 55 90;
#X msg 750 961 55 0;
#X obj 814 937 del 100;
#X msg 786 961 59 90;
#X obj 905 939 del 100;
#X msg 831 960 59 0;
#X msg 877 963 62 90;
#X msg 922 962 62 0;
#X obj 681 866 change;
#X obj 726 866 change;
#X obj 776 865 change;
#X obj 824 864 change;
#X text 577 603 read analog and play note if they are over a threshold
;
#X obj 1057 671 r note;
#X text 1107 676 the notes synthesizer for analog in;
#X obj 454 926 vcf~ 20;
#X obj 470 892 sig~;
#X obj 469 869 * 500;
#X obj 417 869 noise~;
#X obj 457 999 hip~ 5;
#X obj 446 1036 dac~;
#X text 289 881 pressure controls a wind-like synth;
#X obj 470 970 *~;
#X obj 521 951 line;
#X msg 517 924 \$1 50;
#X obj 454 947 *~ 3;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 40 0;
#X connect 7 0 40 1;
#X connect 8 0 10 0;
#X connect 9 0 8 0;
#X connect 10 0 39 0;
#X connect 11 0 39 1;
#X connect 12 0 14 0;
#X connect 13 0 12 0;
#X connect 14 0 37 0;
#X connect 15 0 37 1;
#X connect 16 0 18 0;
#X connect 17 0 16 0;
#X connect 18 0 38 0;
#X connect 19 0 38 1;
#X connect 20 0 21 0;
#X connect 20 0 21 1;
#X connect 27 0 28 0;
#X connect 28 0 30 0;
#X connect 29 0 1 0;
#X connect 30 0 29 0;
#X connect 31 0 5 0;
#X connect 32 0 9 0;
#X connect 33 0 13 0;
#X connect 34 0 17 0;
#X connect 35 0 20 0;
#X connect 36 0 31 0;
#X connect 36 0 32 0;
#X connect 36 0 33 0;
#X connect 36 0 34 0;
#X connect 37 0 3 0;
#X connect 37 0 35 0;
#X connect 38 0 3 0;
#X connect 38 0 35 0;
#X connect 39 0 3 0;
#X connect 39 0 35 0;
#X connect 40 0 3 0;
#X connect 40 0 35 0;
#X connect 41 0 136 0;
#X connect 42 0 41 0;
#X connect 46 0 43 0;
#X connect 47 0 45 0;
#X connect 48 0 44 0;
#X connect 51 0 35 1;
#X connect 55 0 53 0;
#X connect 56 0 57 0;
#X connect 57 0 97 0;
#X connect 58 0 60 0;
#X connect 60 0 62 0;
#X connect 60 1 61 0;
#X connect 61 0 64 0;
#X connect 62 0 64 0;
#X connect 66 0 90 0;
#X connect 67 0 94 0;
#X connect 68 0 95 0;
#X connect 69 0 73 0;
#X connect 69 1 73 1;
#X connect 69 2 71 0;
#X connect 69 3 148 0;
#X connect 69 4 149 0;
#X connect 69 5 150 0;
#X connect 69 6 151 0;
#X connect 71 0 65 0;
#X connect 72 0 65 0;
#X connect 73 0 72 0;
#X connect 75 0 77 0;
#X connect 75 1 78 0;
#X connect 75 2 76 0;
#X connect 82 0 83 0;
#X connect 83 0 84 0;
#X connect 83 1 85 0;
#X connect 83 2 86 0;
#X connect 84 0 87 0;
#X connect 85 0 88 0;
#X connect 86 0 89 0;
#X connect 90 0 91 0;
#X connect 91 0 111 0;
#X connect 92 0 112 0;
#X connect 93 0 113 0;
#X connect 94 0 92 0;
#X connect 95 0 93 0;
#X connect 97 0 59 0;
#X connect 97 1 75 0;
#X connect 97 2 98 0;
#X connect 99 0 102 0;
#X connect 99 1 124 0;
#X connect 100 0 99 0;
#X connect 102 0 101 0;
#X connect 103 0 104 0;
#X connect 103 1 105 0;
#X connect 103 2 106 0;
#X connect 104 0 108 0;
#X connect 105 0 109 0;
#X connect 106 0 110 0;
#X connect 107 0 103 0;
#X connect 111 0 69 0;
#X connect 112 0 69 1;
#X connect 113 0 69 2;
#X connect 114 0 130 0;
#X connect 115 0 131 0;
#X connect 116 0 132 0;
#X connect 117 0 118 0;
#X connect 117 0 125 0;
#X connect 118 0 122 0;
#X connect 118 0 123 0;
#X connect 119 0 69 0;
#X connect 120 0 69 1;
#X connect 121 0 69 2;
#X connect 122 0 121 1;
#X connect 122 0 120 1;
#X connect 122 0 119 1;
#X connect 123 0 113 1;
#X connect 123 0 112 1;
#X connect 123 0 111 1;
#X connect 124 0 101 0;
#X connect 125 0 126 0;
#X connect 125 0 127 0;
#X connect 126 0 113 1;
#X connect 126 0 112 1;
#X connect 126 0 111 1;
#X connect 127 0 121 1;
#X connect 127 0 120 1;
#X connect 127 0 119 1;
#X connect 128 0 124 0;
#X connect 130 0 133 0;
#X connect 131 0 134 0;
#X connect 132 0 135 0;
#X connect 133 0 119 0;
#X connect 134 0 120 0;
#X connect 135 0 121 0;
#X connect 136 0 81 0;
#X connect 136 1 96 0;
#X connect 136 2 137 0;
#X connect 138 0 144 0;
#X connect 138 0 199 0;
#X connect 138 0 231 0;
#X connect 138 0 238 0;
#X connect 139 0 145 0;
#X connect 139 0 200 0;
#X connect 140 0 146 0;
#X connect 140 0 201 0;
#X connect 141 0 142 0;
#X connect 142 0 138 0;
#X connect 142 1 139 0;
#X connect 142 2 140 0;
#X connect 142 3 143 0;
#X connect 143 0 147 0;
#X connect 143 0 202 0;
#X connect 148 0 65 0;
#X connect 149 0 65 0;
#X connect 150 0 65 0;
#X connect 151 0 65 0;
#X connect 152 0 69 3;
#X connect 153 0 69 4;
#X connect 154 0 69 5;
#X connect 155 0 69 6;
#X connect 158 0 176 0;
#X connect 159 0 160 1;
#X connect 159 0 158 0;
#X connect 160 0 212 0;
#X connect 161 0 172 0;
#X connect 162 0 161 0;
#X connect 162 1 163 1;
#X connect 163 0 160 0;
#X connect 168 0 159 0;
#X connect 168 0 162 0;
#X connect 168 1 159 1;
#X connect 168 1 161 1;
#X connect 169 0 186 1;
#X connect 169 0 189 0;
#X connect 170 0 169 0;
#X connect 172 0 163 0;
#X connect 172 1 187 0;
#X connect 174 0 197 0;
#X connect 175 0 186 0;
#X connect 176 0 177 0;
#X connect 177 0 179 0;
#X connect 177 0 178 0;
#X connect 178 0 180 0;
#X connect 179 0 188 0;
#X connect 180 0 175 0;
#X connect 181 0 175 1;
#X connect 186 0 174 0;
#X connect 187 0 170 0;
#X connect 188 0 181 0;
#X connect 189 0 179 1;
#X connect 195 0 196 0;
#X connect 195 0 196 1;
#X connect 197 0 195 0;
#X connect 198 0 197 1;
#X connect 199 0 222 0;
#X connect 200 0 223 0;
#X connect 201 0 224 0;
#X connect 202 0 225 0;
#X connect 204 0 208 0;
#X connect 204 0 209 0;
#X connect 205 0 213 0;
#X connect 205 0 214 0;
#X connect 206 0 216 0;
#X connect 206 0 217 0;
#X connect 207 0 220 0;
#X connect 207 0 218 0;
#X connect 208 0 211 0;
#X connect 209 0 210 0;
#X connect 210 0 211 0;
#X connect 212 0 169 0;
#X connect 213 0 215 0;
#X connect 214 0 211 0;
#X connect 215 0 211 0;
#X connect 216 0 219 0;
#X connect 217 0 211 0;
#X connect 218 0 221 0;
#X connect 219 0 211 0;
#X connect 220 0 211 0;
#X connect 221 0 211 0;
#X connect 222 0 204 0;
#X connect 223 0 205 0;
#X connect 224 0 206 0;
#X connect 225 0 207 0;
#X connect 227 0 168 0;
#X connect 229 0 239 0;
#X connect 230 0 229 1;
#X connect 231 0 230 0;
#X connect 232 0 229 0;
#X connect 233 0 234 0;
#X connect 233 0 234 1;
#X connect 236 0 233 0;
#X connect 237 0 236 1;
#X connect 238 0 237 0;
#X connect 239 0 236 0;
